#!/bin/bash

# normalize.sh
# a script to consistently convert, split, and pull stuff sent from portkey (push_daemon.sh)

WATCHDIR=/opt/test
DONEDIR=/opt/test/done
MAX_SIZE=400M

# grab the first file in that list
THEFILE=$(find $WATCHDIR -maxdepth 1 -type f -name '*_of_*.txt' -not -name '.*' | head -1)

if [ $(echo $THEFILE | wc -w) -eq 0 ]
then
  echo "No files in incoming directory, exiting"
  exit 0
fi

# /opt/test/something.00_of_12.txt
# figure out how many parts we're dealing with

TOTALCNT=$(echo ${THEFILE} | rev | cut -d. -f2 | cut -d_ -f1 | rev)
FILEBASE=$(echo ${THEFILE} | rev | cut -d. -f3 | rev)
DONEFILE=${DONEDIR}/$(basename ${FILEBASE})

echo FILEBASE = $FILEBASE
echo TOTALCNT = $TOTALCNT
echo DONEFILE = $DONEFILE
exit 0

for num in {00..${TOTALCNT}}
do
  FILE=${FILEBASE}.${num}_of_${TOTALCNT}.txt
  if [ -f ${TRANSFILE} ]
  then
    echo "Skipping ${file}, as it already has a transfer file present."
    continue
  fi
  echo Converting Part ${file}
  echo "This is a file generated by Red Hat in order to assist scanners, which are having trouble reading the verified Red Hat data below.  Please contact taylor@redhat.com if you have any concerns or issues." > ${file}.txt
  sha256sum ${file} >> ${file}.txt
  echo >> ${file}.txt
  cat ${file} | base64 >> ${file}.txt
  rm ${file}
  echo Uploading Part ${file}
  curl -k -f -T ${file}.txt ${BASEURL}$(basename ${file})_of_${TOTALCNT}.txt > $TRANSFILE
  rm ${file}.txt
done
rm $THEFILE
